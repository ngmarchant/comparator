% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/InVocabulary.R
\name{InVocabulary}
\alias{InVocabulary}
\title{In-Vocabulary Measure}
\usage{
InVocabulary(
  vocab,
  both_in_distinct = 0.7,
  both_in_same = 1,
  one_in = 1,
  none_in = 1,
  ignore_case = FALSE,
  ...
)
}
\arguments{
\item{vocab}{a vector containing in-vocabulary (known) strings. Any strings
not in this vector are out-of-vocabulary (unknown).}

\item{both_in_distinct}{score to return if the pair of values being
compared are both in \code{vocab} and distinct. Defaults to 0.7, which would
is appropriate for multiplying by a similarity measure. If multiplying
by a distance measure, a value greater than 1 is likely to be more
appropriate.}

\item{both_in_same}{score to return if the pair of values being
compared are both in \code{vocab} and identical. Defaults to 1.0, which
would leave another measure unchanged when multiplied by this one.}

\item{one_in}{score to return if only one of the pair of values being
compared is in \code{vocab}. Defaults to 1.0, which would leave another
measure unchanged when multiplied by this one.}

\item{none_in}{score to return if none of the pair of values being
compared is in \code{vocab}. Defaults to 1.0, which would leave another
measure unchanged when multiplied by this one.}

\item{ignore_case}{a logical. If TRUE, case is ignored when computing the
distance/similarity.}
}
\description{
This measure compares strings using a reference vocabulary. Different scores
are returned depending on whether both/one/neither of the strings are
in the reference vocabulary.
}
\details{
This measure is not intended to serve as a useful comparison
measure on its own. Rather, it is intended to produce multiplicative
factors which can be applied to another similarity/distance measure.
It is particularly useful for comparing names when a reference list
(vocabulary) of known names is available. For example, it can be
configured to down-weight the similarity of distinct (known) names like
"Roberto" and "Umberto" which are semantically very different, but
deceptively similar in terms of edit distance. The normalized Levenshtein
similarity for these two names is 75\%, but their similarity can be
reduced to 53\% if multiplied by this measure with the default settings.
}
