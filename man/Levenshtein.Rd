% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Levenshtein.R
\name{Levenshtein}
\alias{Levenshtein}
\title{Levenshtein (Edit) Distance}
\usage{
Levenshtein(
  deletion = 1,
  insertion = 1,
  substitution = 1,
  normalize = FALSE,
  similarity = FALSE,
  ignore_case = FALSE,
  use_bytes = FALSE,
  ...
)
}
\arguments{
\item{deletion}{positive cost associated with deletion of a character.
Defaults to unit cost.}

\item{insertion}{positive cost associated insertion of a character.
Defaults to unit cost.}

\item{substitution}{positive cost associated with substitution of a
character. Defaults to unit cost.}

\item{normalize}{a logical. If TRUE, distances are normalized to the
unit interval. Defaults to FALSE.}

\item{similarity}{a logical. If TRUE, similarity scores on the unit interval
are returned instead of distances. Defaults to FALSE.}

\item{ignore_case}{a logical. If TRUE, case is ignored when computing the
distance. Defaults to FALSE.}

\item{use_bytes}{a logical. If TRUE, distances are computed byte-by-byte
rather than character-by-character.}
}
\description{
The Levenshtein distance between two strings is the minimum cost of
single-character operations (insertions, deletions or substitutions) required
to transform one string into the other.
}
\note{
If the costs of all operations are identical, Levenshtein distance is
a proper distance metric (it satisfies the triangle inequality).
}
\references{
Yujian, L. & Bo, L. A Normalized Levenshtein Distance Metric.
\emph{IEEE Transactions on Pattern Analysis and Machine Intelligence}
\strong{29}, 1091â€“1095 (2007).
}
